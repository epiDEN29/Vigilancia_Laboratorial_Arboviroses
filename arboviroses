import pandas as pd
from google.colab import drive

drive.mount('/content/drive')

# ler data frame
dados = pd.read_excel('/content/drive/My Drive/Vigilância Laboratorial/data.xlsx')

# Função para processar e filtrar os dados para um agravo específico
def processar_dados_agravo(dados, agravo):
    filtrados = dados.loc[dados['Agravo da Requisição'].str.contains(agravo, case=False, na=False)].copy()

    # deletando linhas com resultados vazios
    filtrados.drop(filtrados.loc[filtrados['Status Exame'] == 'Aguardando Triagem'].index, inplace=True)
    filtrados.drop(filtrados.loc[filtrados['Status Exame'] == 'Disponível para encaminhar'].index, inplace=True)
    filtrados.drop(filtrados.loc[filtrados['Status Exame'] == 'Exame Cancelado'].index, inplace=True)
    filtrados.drop(filtrados.loc[filtrados['Status Exame'] == 'Exame em Análise'].index, inplace=True)
    filtrados.drop(filtrados.loc[filtrados['Status Exame'] == 'Exame não-realizado'].index, inplace=True)
    filtrados.drop(filtrados.loc[filtrados['1º Campo Resultado'] == 'Diagnóstico Diferencial: Não'].index, inplace=True)

    # retirando espaços das strings de resultados
    filtrados['1º Campo Resultado'] = filtrados['1º Campo Resultado'].str.strip()

    # Contar os resultados e colocá-los em colunas
    contagem_resultados = filtrados.pivot_table(index='Municipio do Solicitante',
                                                columns='1º Campo Resultado',
                                                values='Requisição',
                                                aggfunc='count',
                                                fill_value=0)

    # somando número de exames concluídos, conforme número de resultados entregues
    contagem_resultados['Amostras Enviadas'] = contagem_resultados.sum(axis=1)

    # Cria uma nova coluna 'Total Positivas' que é a soma das colunas 'Reagente' e 'Detectável'
    contagem_resultados['Total Positivas'] = contagem_resultados.get('Resultado: Reagente', 0) + \
                                             contagem_resultados.get('Dengue: Detectável', 0) + \
                                             contagem_resultados.get('Resultado: Detectável', 0)

    # Adiciona uma linha 'Total' que é a soma dos valores de cada coluna individualmente
    contagem_resultados.loc['Total'] = contagem_resultados.sum(numeric_only=True)

    # Organize as colunas de acordo com o valor total, do maior para o menor
    contagem_resultados = contagem_resultados[contagem_resultados.loc['Total'].sort_values(ascending=False).index]

    # Define colunas na ordem desejada
    ordered_columns = ['Amostras Enviadas',
                       'Dengue: Inconclusivo', 'Resultado: Inconclusivo', 'Resultado: Indeterminado',
                       'Resultado: Reagente', 'Resultado: Não Reagente',
                       'Dengue: Detectável', 'Resultado: Detectável',
                       'Dengue: Não Detectável', 'Resultado: Não Detectável',
                       'Total Positivas']

    contagem_resultados = contagem_resultados.reindex(columns=ordered_columns)

    return contagem_resultados

# Processando dados para cada agravo
df_dengue = processar_dados_agravo(dados, 'DENGUE')
df_zika = processar_dados_agravo(dados, 'ZIKA')
df_chikungunya = processar_dados_agravo(dados, 'CHIKUNGUNYA')

# Salvando os resultados em diferentes sheets no mesmo arquivo Excel
output_path = '/content/drive/My Drive/Vigilância Laboratorial/VigiLab_Pará_Arboviroses.xlsx'

with pd.ExcelWriter(output_path) as writer:
    df_dengue.to_excel(writer, sheet_name='DENGUE')
    df_zika.to_excel(writer, sheet_name='ZIKA')
    df_chikungunya.to_excel(writer, sheet_name='CHIKUNGUNYA')

print(f"Tabela salva com sucesso!")
print(f"Desenvolvido por Pedro Araújo")
